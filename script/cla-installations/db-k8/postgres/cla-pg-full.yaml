apiVersion: v1
kind: Namespace
metadata:
  name: cla-pg
  labels:
    name: cla-pg
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cla-pg-secret
  namespace: cla-pg
  labels:
    app: cla-pg
data:
  POSTGRESQL_USERNAME: userk8
  POSTGRESQL_PASSWORD: pwdk8
  POSTGRESQL_DATABASE: TestDatabase
  POSTGRESQL_POSTGRES_PASSWORD: Abcd1234
---
apiVersion: v1
kind: PersistentVolume # Create PV 
metadata:
  name: cla-pg-volume # Sets PV name
  labels:
    type: local # Sets PV's type
    app: cla-pg
spec:
  storageClassName: local-storage
  capacity:
    storage: 50Gi # Sets PV's size
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  local:
    path: "/k8-pv/pg" # Sets PV's host path
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - db-node01
---
apiVersion: v1
kind: PersistentVolumeClaim # Create PVC
metadata:
  name: cla-pg-volume-claim # Sets PVC's name
  namespace: cla-pg
  labels:
    app: cla-pg # Defines app to create PVC for
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi # Sets PVC's size
---
apiVersion: v1
kind: Service # Create service
metadata:
  name: cla-pg-svc # Sets the service name
  namespace: cla-pg
  labels:
    app: cla-pg # Defines app to create service for
spec:
  type: NodePort # Sets the service type
  ports:
    - port: 5432 # Sets the port to run the postgres application
      nodePort: 30002
  selector:
    app: cla-pg
---
apiVersion: apps/v1
kind: Deployment # Create a deployment
metadata:
  namespace: cla-pg
  name: cla-pg # Set the name of the deployment
spec:
  replicas: 1 # Set 2 deployment replicas
  selector:
    matchLabels:
      app: cla-pg
  template:
    metadata:
      labels:
        app: cla-pg
    spec:
      containers:
        - name: postgres
          image: bitnami/postgresql:13.7.0-debian-11-r7 # Docker image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432 # Exposing the container port 5432 for PostgreSQL client connections.
          envFrom:
            - configMapRef:
                name: cla-pg-secret # Using the ConfigMap postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: cla-pg-postgresdata
      volumes:
        - name: cla-pg-postgresdata
          persistentVolumeClaim:
            claimName: cla-pg-volume-claim
